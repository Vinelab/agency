// Generated by CoffeeScript 1.6.3
(function() {
  var Sections;

  Sections = (function() {
    function Sections() {
      this.configure();
    }

    Sections.prototype.configure = function() {
      var pager_selector, table_selector;
      table_selector = '#sections-table';
      pager_selector = '#sections-pager';
      $(table_selector).jqGrid({
        url: 'configuration/sections',
        datatype: 'json',
        mtype: 'GET',
        savekey: [true, 13],
        pager: pager_selector,
        height: 'auto',
        viewrecords: true,
        rowNum: 10,
        rowList: [10, 20, 30],
        caption: "Sections",
        multiselect: true,
        multiboxonly: true,
        autowidth: true,
        shrinkToFit: true,
        loadError: function(xhr, status, error) {
          throw new Error(error);
          return alert('There was an error loading data. Please try again later.');
        },
        colNames: ['ID', 'Title', 'Alias (URI)', 'Icon', 'Parent', 'Fertile', 'Can Have Roles', 'Created', 'Last Updated'],
        colModel: [
          {
            name: 'id',
            index: 'id',
            width: 5,
            sorttype: "int",
            editable: false,
            align: 'center'
          }, {
            name: 'title',
            index: 'title',
            width: 40,
            editable: true,
            editoptions: {
              size: "20",
              maxlength: "100"
            }
          }, {
            name: 'alias',
            index: 'alias',
            width: 40,
            editable: true,
            editoptions: {
              size: "20",
              maxlength: "100"
            }
          }, {
            name: 'icon',
            index: 'icon',
            width: 30,
            editable: true,
            formatter: this.iconView,
            unformat: this.iconEdit,
            editoptions: {
              size: "20",
              maxlength: "100"
            }
          }, {
            name: 'parent_id',
            index: 'parent_id',
            editable: true,
            width: 25
          }, {
            name: 'is_fertile',
            index: 'is_fertile',
            width: 20,
            editable: true,
            align: 'center',
            formatter: 'checkbox',
            edittype: 'checkbox',
            editoptions: {
              value: "Yes:No"
            }
          }, {
            name: 'is_roleable',
            index: 'is_roleable',
            width: 20,
            editable: true,
            align: 'center',
            formatter: 'checkbox',
            edittype: 'checkbox',
            editoptions: {
              value: 'Yes:No'
            }
          }, {
            name: 'created_at',
            index: 'created_at',
            width: 35,
            editable: false
          }, {
            name: 'updated_at',
            index: 'updated_at',
            width: 35,
            editable: false
          }
        ]
      }).navGrid(pager_selector, {
        view: true,
        viewicon: 'icon-zoom-in grey',
        add: true,
        addicon: 'icon-plus-sign purple',
        edit: true,
        editicon: 'icon-pencil blue',
        del: true,
        delicon: 'icon-trash red',
        search: true,
        searchicon: 'icon-search orange',
        refresh: true,
        refreshicon: 'icon-refresh green',
        reloadAfterSubmit: true
      }, {
        editCaption: 'Edit Section',
        mtype: 'PUT',
        recreateForm: true,
        closeAfterEdit: true,
        onclickSubmit: function(params, postdata) {
          return params.url = "/cms/configuration/sections/" + (encodeURIComponent(postdata['sections-table_id']));
        }
      }, {
        mtype: 'POST',
        closeAfterAdd: true,
        reloadAfterSubmit: true,
        url: 'configuration/sections'
      }, {
        mtype: 'DELETE',
        onclickSubmit: function(params, postdata) {
          return params.url = "/cms/configuration/sections/" + (encodeURIComponent(postdata));
        }
      }, {
        mtype: 'GET'
      }, {
        mtype: 'GET'
      });
      return $(window).on('resize', function() {
        var width;
        width = $(window).width();
        width = width - 2;
        if (width > 0 && Math.abs(width - $(table_selector).width()) > 5) {
          return $(table_selector).setGridWidth(width);
        }
      });
    };

    Sections.prototype.iconView = function(cellvalue, options, cell) {
      return "<span class=\"icon-" + cellvalue + " bigger-110\"> " + cellvalue + "</span>";
    };

    Sections.prototype.iconEdit = function(cellvalue, options, cell) {
      return $('span', cell).text().trim();
    };

    return Sections;

  })();

}).call(this);
