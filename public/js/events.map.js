// Generated by CoffeeScript 1.6.3
(function() {
    var ArtistEvent,
        __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

    ArtistEvent = (function() {
        ArtistEvent.prototype.config = {
            google_api_key: 'AIzaSyAujY79MM9_pnxXd3c75yWHKfrirRrtjVI',
            google_client_id: '513701925820.apps.googleusercontent.com'
        };

        function ArtistEvent() {
            this.init_gPlaces = __bind(this.init_gPlaces, this);
            this.gMap = this.gMapMarker = this.gPlaces = this.gPlaceInfoWindow = null;
        }
        ArtistEvent.prototype.show_add_event = function() {
            var _this = this;
            $("#events_form").find("input").each(function() {
                if ($(this).attr('type') !== 'hidden') {
                    return $(this).val("");
                }
            });

            if (this.gMapMarker) {
                this.gMapMarker.setMap(null);
                this.gMapMarker = null;
            }

            $("#add-event-modal").on("shown", function() {
                if (!_this.gMap) {
                    return _this.init_gMaps("map-canvas", _this.init_gPlaces);
                }
            });
        };

        ArtistEvent.prototype.init_with_location = function(location) {
            var lat, lng,
                _this = this;
            lat = location.split(',')[0];
            lng = location.split(',')[1];

            return this.init_gMaps("map-canvas", (function() {
                _this.init_gPlaces();
                _this.place_map_marker(location);
                return google.maps.event.trigger(_this.gMap, 'resize');
            }), {
                zoom: 5,
                center: new google.maps.LatLng(lat, lng)
            });
        };

        ArtistEvent.prototype.choose_new_event_time = function(date, target) {
            $("#add-event-modal-timepicker").fadeOut();
            return $(target).parent().find('.time-holder:eq(0)').val("" + ($("#add-event-modal-timpicker-hr").val()) + ":" + ($("#add-event-modal-timpicker-min").val()));
        };

        ArtistEvent.prototype.init_gMaps = function(elementId, callback, options) {
            var mapOptions,
                _this = this;
            mapOptions = {
                center: new google.maps.LatLng(23.92079837075086, 49.724364796874966),
                zoom: 5,
                mapTypeId: google.maps.MapTypeId.ROADMAP
            };
            mapOptions = $.extend({}, mapOptions, options);
            this.gMap = new google.maps.Map(document.getElementById(elementId), mapOptions);
            google.maps.event.addListener(this.gMap, "click", function(event) {
                return _this.place_map_marker(event.latLng);
            });
            google.maps.event.trigger(this.gMap, "resize");
            if (typeof callback === "function") {
                return callback();
            }
        };

        ArtistEvent.prototype.init_gPlaces = function() {
            var autocomplete, gPlaceInput,
                _this = this;
            this.gPlaces = new google.maps.places.PlacesService(this.gMap);
            gPlaceInput = document.getElementById("event-venue-address");
            autocomplete = new google.maps.places.Autocomplete(gPlaceInput);
            return google.maps.event.addListener(autocomplete, 'place_changed', function() {
                return _this.didFinishRetreivingPlace(autocomplete.getPlace());
            });
        };

        ArtistEvent.prototype.didFinishRetreivingPlace = function(place) {
            var addr_component, address_components, city, country_code, _i, _len;
            if (place == null) {
                return null;
            } else {
                if (!this.gMapMarker) {
                    this.place_map_marker(place.geometry.location);
                } else {
                    this.place_map_marker(place.geometry.location);
                }
                $("#add-event-venue-name").val(place.name);
                address_components = place != null ? place.address_components : void 0;
                for (_i = 0, _len = address_components.length; _i < _len; _i++) {
                    addr_component = address_components[_i];
                    if ((addr_component != null ? addr_component.types[0] : void 0) === "country") {
                        country_code = addr_component != null ? addr_component.short_name : void 0;
                    }
                    if ((addr_component != null ? addr_component.types[0] : void 0) === "locality" || (addr_component != null ? addr_component.types[0] : void 0) === "administrative_area_level_1") {
                        city = addr_component != null ? addr_component.long_name : void 0;
                    }
                }
                $("input[name=city]").val(city);
                $("select[name=country]").val(country_code);
                if (place.geometry.viewport) {
                    return this.gMap.fitBounds(place.geometry.viewport);
                } else {
                    this.gMap.setCenter(place.geometry.location);
                    return this.gMap.setZoom(17);
                }
            }
        };

        ArtistEvent.prototype.place_map_marker = function(location) {
            var lat, lng;
            if (typeof location !== 'object') {
                location = location.split(',');
                lat = location[0];
                lng = location[1];
                location = new google.maps.LatLng(lat, lng);
            }
            if (!this.gMapMarker) {
                this.gMapMarker = new google.maps.Marker({
                    position: location,
                    map: this.gMap,
                    animation: google.maps.Animation.DROP
                });
            } else {
                this.gMapMarker.setPosition(location);
            }
            $("#map-marker-latlong").val(location.lat() + "," + location.lng());
            return this.gMapMarker.setVisible(true);
        };

        ArtistEvent.prototype.didChooseCountry = function(element) {
            return $("#event-venue-address").val($(element).find("option[value=" + ($(element).val()) + "]").text());
        };

        return ArtistEvent;

    })();

    window.Event = new ArtistEvent;

}).call(this);

